{"version":3,"sources":["components/spinner/index.js","components/GroupItem.js","components/Qualifier.js","components/SemiFinal.js","components/Final.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["Spinner","props","state","marginTop","bounceStyle","backgroundColor","spinnerStyle","this","className","style","Component","GroupInfo","Fragment","isFlipped","gropName","groupMembers","map","team","key","GroupItem","groupResult","groupInfo","groupId","result","isActive","groupName","groupStatus","winner","looser","connect","QualifierResult","qualifierStatus","matchId","qualifierResult","Qualifier","groupOne","groupTwo","ResultComponent","quaterFinalStatus","quaterFinalResult","SemiFinal","qualifierGroupOne","slice","qualifierGroupTwo","Final","setIntialState","TeamData","groupCapacity","Math","floor","length","groupTable","generateGroups","localStorage","setItem","JSON","stringify","setState","dispatch","type","resumeTournament","teams","capacity","groups","j","group","i","lengthRemaining","selectedTeam","random","push","splice","String","fromCharCode","getResult","competitors","winnerIndex","getResumeIndex","statusArray","runningIndex","indexOf","upComingIndex","getGroupResult","window","setTimeout","data","getQualifierMatchResult","progressTable","index","nextMatchId","startQualifier","remainingQualifierIndex","getQuaterFinalMatchResult","startQuaterFinal","remainingQuaterFinalIndex","startSemiFinal","semiFinalStatus","remainingSemiFinalIndex","getSemiFinalMatchResult","startFinal","finalStatus","remainingFinalIndex","finalResult","semiFinalResult","isGroupStageDone","isQualifierStageDone","lastIndexOf","isQuaterFinalDone","isSemiFinalDone","isFinalDone","getItem","parse","semiGroupOne","semiGroupTwo","matchType","FinalResult","resetTournament","clear","location","reload","onClick","App","Boolean","hostname","match","isLocalStoreAvailable","emptyState","localState","intialState","reducer","action","newState","console","log","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dc150956.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport  './index.css';\n\nclass Spinner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      marginTop: props.marginTop ? props.marginTop : 0\n    }\n  }\n  render() {\n    const bounceStyle = {\n      backgroundColor: \"cornflowerblue\"\n    }\n    const spinnerStyle = {\n      marginTop: this.state.marginTop\n    }\n\n    return(\n      <Fragment>\n        <div className=\"spinner\" style={spinnerStyle}>\n          <div className=\"bounce bounce1\" style={bounceStyle}></div>\n          <div className=\"bounce bounce2\" style={bounceStyle}></div>\n          <div className=\"bounce bounce3\" style={bounceStyle}></div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default Spinner;","import React, { Component } from 'react';\nimport './groupItem.css';\nimport Spinner from './spinner';\nimport { connect } from 'react-redux';\n\nlet GroupInfo = (props) => {\n  return (\n    <React.Fragment>\n      {!props.isFlipped && <div className=\"group-name\"> {props.gropName} </div>}\n      <div className=\"team-container\">\n        {props.groupMembers.map(team => {\n          return <div className=\"team-name\" key={team}>{team}</div>;\n        })}\n      </div>\n      {props.isFlipped && <div className=\"group-name\"> {props.gropName} </div>}\n    </React.Fragment>\n  );\n}\n\nclass GroupItem extends Component {\n  render() {\n    let groupResult = this.props.groupResult[this.props.groupInfo.groupId],\n        result = groupResult ? groupResult.result : ''; \n    return (\n      <div className={ \"group-item-container\" +(!this.props.isActive ? ' disable-font' : '')}>\n        { !this.props.isFlipped &&  \n          <GroupInfo \n            groupMembers={this.props.groupInfo.groupMembers}\n            gropName={this.props.groupInfo.groupName}\n            isFlipped={this.props.isFlipped}\n          />\n        }\n        <div className=\"group-result\">\n          <div className={\"result-label\" + (this.props.isActive ? \"\" : (this.props.isFlipped ? \" left\" : \" right\") +  \"-border\")}>\n            {\"Group \"+ this.props.groupInfo.groupName + (this.props.isActive ? \" winner\" : \" runner up\")}\n          </div>\n          <div className={\"result-value\" + (this.props.isActive ? (this.props.isFlipped ? \" left\" : \" right\") +  \"-border\" : \"\")}>\n            {\n              this.props.groupStatus === 1 ?\n              <Spinner /> :\n              this.props.isActive ? result.winner : result.looser\n            }\n          </div>\n        </div>\n        { this.props.isFlipped &&  \n          <GroupInfo \n            groupMembers={this.props.groupInfo.groupMembers}\n            gropName={this.props.groupInfo.groupName}\n            isFlipped={this.props.isFlipped}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  groupStatus : state.groupStatus,\n  groupResult : state.groupResult\n});\n\n\nexport default connect(mapStateToProps)(GroupItem);","import React, { Component } from 'react';\nimport './qualifier.css'\nimport GroupItem from './GroupItem';\nimport Spinner from './spinner';\nimport { connect } from 'react-redux';\n\nclass QualifierResult extends Component {\n  render() {\n    return(\n    <div className=\"qualifier-result\">\n      <div className={\"result-label\" + (this.props.isActive ? \"\" : (this.props.isFlipped ? \" left\" : \" right\") +  \"-border\")}>Qualifier</div>\n      <div className={\"result-value\" + (this.props.isActive ? (this.props.isFlipped ? \" left\" : \" right\") +  \"-border\" : \"\")}> \n        {this.props.qualifierStatus[this.props.matchId] === 0\n           ? \"---\"\n           : this.props.qualifierStatus[this.props.matchId] === 2\n              ? this.props.qualifierResult[this.props.matchId].winner\n              : <Spinner />\n        }\n      </div>\n    </div>\n  )\n  }\n} \n\nclass Qualifier extends Component {\n  render() {\n    let groupOne = this.props.groupInfo[0];\n    let groupTwo = this.props.groupInfo[1];\n\n    return (\n      <div className=\"qualifier-conatiner\">\n         {this.props.isFlipped && (\n          <QualifierResult\n            {...this.props}\n          />\n        )}\n        <div>\n          <GroupItem\n            isActive={true}\n            groupInfo={this.props.isFlipped ? groupTwo : groupOne}\n            isFlipped={this.props.isFlipped}\n          />\n          <GroupItem\n            isActive={false}\n            groupInfo={this.props.isFlipped ? groupOne : groupTwo }\n            isFlipped={this.props.isFlipped}\n          />\n        </div>\n        {!this.props.isFlipped && (\n          <QualifierResult\n            {...this.props}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  qualifierStatus : state.qualifierStatus,\n  qualifierResult : state.qualifierResult\n});\n\nexport default connect(mapStateToProps)(Qualifier);","import React, { Component } from 'react';\nimport Qualifier from './Qualifier';\nimport './semiFinal.css';\nimport Spinner from './spinner';\nimport { connect } from 'react-redux';\n\nconst ResultComponent = (props) => {\n  return (\n    <div className=\"result-conatiner\">\n      <div className={\"result-label\" + (props.isActive ? \"\" : (props.isFlipped ? \" left\" : \" right\") +  \"-border\")}>\n        Winner of QuaterFinal {props.matchId+1}\n      </div>\n      <div className={\"result-value\" + (props.isActive ? (props.isFlipped ? \" left\" : \" right\") +  \"-border\" : \"\")}>\n      {props.quaterFinalStatus[props.matchId] === 0\n           ? \"---\"\n           : props.quaterFinalStatus[props.matchId] === 2\n              ? props.quaterFinalResult[props.matchId].winner\n              : <Spinner />\n      }\n      </div>\n    </div>\n  )\n}\n\n\nclass SemiFinal extends Component {\n  render() {\n    let qualifierGroupOne = [...this.props.groupInfo].slice(0,2);\n    let qualifierGroupTwo = [...this.props.groupInfo].slice(2,4);\n\n    return (\n      <div className=\"semi-final-conatiner\">\n        { this.props.isFlipped &&\n          <ResultComponent {...this.props} />\n        }\n        <div>\n          <Qualifier \n            isActive={true}\n            isFlipped={this.props.isFlipped}\n            groupInfo={qualifierGroupOne}\n            matchId={(this.props.matchId)*2}\n          />\n          <Qualifier \n            isActive={false}\n            isFlipped={this.props.isFlipped}\n            groupInfo={qualifierGroupTwo}\n            matchId={((this.props.matchId)*2)+ 1}\n          />\n        </div>\n        { !this.props.isFlipped &&\n          <ResultComponent {...this.props} />\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  quaterFinalStatus : state.quaterFinalStatus,\n  quaterFinalResult : state.quaterFinalResult\n});\n\n\nexport default connect(mapStateToProps)(SemiFinal);","import React, { Component } from 'react';\nimport SemiFinal from './SemiFinal'\nimport './final.css';\nimport Spinner from './spinner';\nimport { connect } from 'react-redux';\n\nclass Final extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupTable: []\n    };\n  }\n\n  componentDidMount() {\n    let isLocalStorage = localStorage.getItem(\"groupTable\") !== null;\n    let groupTable;\n    if (!isLocalStorage) {\n      this.setIntialState();\n    } else {\n      groupTable = JSON.parse(localStorage.getItem(\"groupTable\"));\n      this.setState(\n        {\n          groupTable: groupTable\n        },\n        () => {\n          this.resumeTournament();\n        }\n      );\n    }\n  }\n\n  setIntialState = () => {\n    let TeamData = [\n      \"South Africa\",\n      \"Zimbabwe\",\n      \"West indies\",\n      \"Afghanistan\",\n      \"Bangladesh\",\n      \"India\",\n      \"Pakistan\",\n      \"Sri Lanka\",\n      \"Australia\",\n      \"New Zealand\",\n      \"England\",\n      \"Ireland\",\n      \"Ghana\",\n      \"Kenya\",\n      \"Morocco\",\n      \"Namibia\",\n      \"Nigeria\",\n      \"Swaziland\",\n      \"Tanzania\",\n      \"Uganda\",\n      \"Zambia\",\n      \"Argentina\",\n      \"Bahamas\",\n      \"Bermuda\",\n      \"Brazil\",\n      \"Canada\",\n      \"Chile\",\n      \"Costa Rica\",\n      \"Mexico\",\n      \"Panama\",\n      \"Turky\",\n      \"United States\"\n    ];\n\n    // Asuming we have 8 group in tournament\n    let groupCapacity = Math.floor(TeamData.length / 8);\n    let groupTable = this.generateGroups(TeamData, groupCapacity);\n\n    localStorage.setItem(\"groupTable\", JSON.stringify(groupTable));\n\n    this.setState(\n      {\n        groupTable: groupTable\n      },\n      () => {\n        this.props.dispatch({\n          type: \"RESET_DATA\"\n        });\n        this.resumeTournament();\n      }\n    );\n  };\n\n  generateGroups = (teams, capacity) => {\n    let groups = [];\n    for (let j = 0; j < 8; j++) {\n      let group = [];\n      for (let i = 0; i < capacity; i++) {\n        let lengthRemaining = teams.length;\n        let selectedTeam = Math.floor(Math.random() * lengthRemaining);\n        group.push(teams[selectedTeam]);\n        teams.splice(selectedTeam, 1);\n      }\n      let groupInfo = {\n        groupMembers: group,\n        groupName: String.fromCharCode(j + 65),\n        groupId: j\n      };\n      groups.push(groupInfo);\n    }\n\n    return groups;\n  };\n\n  getResult = teams => {\n    let competitors = [...teams];\n    let winnerIndex = Math.floor(Math.random() * competitors.length);\n    let winner = competitors[winnerIndex];\n    competitors.splice(winnerIndex, 1);\n\n    let looserIndex = Math.floor(Math.random() * competitors.length);\n    let looser = competitors[looserIndex];\n\n    return {\n      winner: winner,\n      looser: looser\n    };\n  };\n\n  getResumeIndex = statusArray => {\n    let runningIndex = statusArray.indexOf(1);\n    let upComingIndex = statusArray.indexOf(0);\n    let resumeIndex =\n      runningIndex !== -1\n        ? runningIndex\n        : upComingIndex !== -1\n        ? upComingIndex\n        : statusArray.length;\n    return resumeIndex;\n  };\n\n  getGroupResult = () => {\n    let groupResult = this.state.groupTable.map(group => {\n      return {\n        result: this.getResult(group.groupMembers)\n      };\n    });\n\n    window.setTimeout(() => {\n      this.props.dispatch({\n        type: \"RECORD_GROUP_RESULT\",\n        data: groupResult\n      });\n      this.resumeTournament();\n    }, 6000);\n  };\n\n  getQualifierMatchResult = matchId => {\n    let groupResult = this.props.progressTable.groupResult;\n\n    if (matchId < 8) {\n      let competitors;\n      if (matchId < 4) {\n        competitors = [\n          groupResult[matchId * 2].result.winner,\n          groupResult[matchId * 2 + 1].result.looser\n        ];\n      } else {\n        competitors = [\n          groupResult[(matchId - 4) * 2].result.looser,\n          groupResult[(matchId - 4) * 2 + 1].result.winner\n        ];\n      }\n      let result = this.getResult(competitors);\n\n      window.setTimeout(() => {\n        this.props.dispatch({\n          type: \"RECORD_QUALIFIER_RESULT\",\n          data: result,\n          index: matchId\n        });\n        let nextMatchId = matchId + 1;\n        this.getQualifierMatchResult(nextMatchId);\n      }, 3000);\n    } else {\n      this.resumeTournament();\n    }\n  };\n\n  startQualifier = () => {\n    let qualifierStatus = this.props.progressTable.qualifierStatus;\n    let remainingQualifierIndex = this.getResumeIndex(qualifierStatus);\n\n    this.props.dispatch({\n      type: \"START_QUALIFIER\",\n      index: remainingQualifierIndex\n    });\n\n    this.getQualifierMatchResult(remainingQualifierIndex);\n  };\n\n  getQuaterFinalMatchResult = matchId => {\n    let qualifierResult = this.props.progressTable.qualifierResult;\n    if (matchId < 4) {\n      let competitors = [\n        qualifierResult[matchId * 2].winner,\n        qualifierResult[matchId * 2 + 1].winner\n      ];\n      let result = this.getResult(competitors);\n\n      window.setTimeout(() => {\n        this.props.dispatch({\n          type: \"RECORD_QUATER_FINAL_RESULT\",\n          data: result,\n          index: matchId\n        });\n        let nextMatchId = matchId + 1;\n        this.getQuaterFinalMatchResult(nextMatchId);\n      }, 3000);\n    } else {\n      this.resumeTournament();\n    }\n  };\n\n  startQuaterFinal = () => {\n    let quaterFinalStatus = this.props.progressTable.quaterFinalStatus;\n    let remainingQuaterFinalIndex = this.getResumeIndex(quaterFinalStatus);\n\n    this.props.dispatch({\n      type: \"START_QUATERFINAL\",\n      index: remainingQuaterFinalIndex\n    });\n\n    this.getQuaterFinalMatchResult(remainingQuaterFinalIndex);\n  };\n\n  startSemiFinal = () => {\n    let semiFinalStatus = this.props.progressTable.semiFinalStatus;\n    let remainingSemiFinalIndex = this.getResumeIndex(semiFinalStatus);\n\n    this.props.dispatch({\n      type: \"START_SEMIFINAL\",\n      index: remainingSemiFinalIndex\n    });\n\n    this.getSemiFinalMatchResult(remainingSemiFinalIndex);\n  };\n\n  getSemiFinalMatchResult = matchId => {\n    let quaterFinalResult = this.props.progressTable.quaterFinalResult;\n    if (matchId < 2) {\n      let competitors = [\n        quaterFinalResult[matchId * 2].winner,\n        quaterFinalResult[matchId * 2 + 1].winner\n      ];\n      let result = this.getResult(competitors);\n\n      window.setTimeout(() => {\n        this.props.dispatch({\n          type: \"RECORD_SEMI_FINAL_RESULT\",\n          data: result,\n          index: matchId\n        });\n        let nextMatchId = matchId + 1;\n        this.getSemiFinalMatchResult(nextMatchId);\n      }, 3000);\n    } else {\n      this.resumeTournament();\n    }\n  };\n\n  startFinal = () => {\n    let finalStatus = this.props.progressTable.finalStatus;\n    let remainingFinalIndex = this.getResumeIndex(finalStatus);\n\n    this.props.dispatch({\n      type: \"START_FINAL\",\n      index: remainingFinalIndex\n    });\n\n    this.finalResult(remainingFinalIndex);\n  };\n\n  finalResult = matchId => {\n    let semiFinalResult = this.props.progressTable.semiFinalResult;\n    let type = matchId ? \"looser\" : \"winner\";\n    if (matchId < 2) {\n      let competitors = [semiFinalResult[0][type], semiFinalResult[1][type]];\n      let result = this.getResult(competitors);\n\n      window.setTimeout(() => {\n        this.props.dispatch({\n          type: \"RECORD_FINAL_RESULT\",\n          data: result,\n          index: matchId\n        });\n        let nextMatchId = matchId + 1;\n        this.finalResult(nextMatchId);\n      }, 3000);\n    } else {\n    }\n  };\n\n  resumeTournament = () => {\n    let progressTable = this.props.progressTable,\n      isGroupStageDone = progressTable.groupStatus === 2,\n      isQualifierStageDone = progressTable.qualifierStatus.lastIndexOf(2) === 7,\n      isQuaterFinalDone = progressTable.quaterFinalStatus.lastIndexOf(2) === 3,\n      isSemiFinalDone = progressTable.semiFinalStatus.lastIndexOf(2) === 1,\n      isFinalDone = progressTable.finalStatus.lastIndexOf(2) === 1;\n    if (!isGroupStageDone) {\n      this.getGroupResult();\n    } else if (!isQualifierStageDone) {\n      this.startQualifier();\n    } else if (!isQuaterFinalDone) {\n      this.startQuaterFinal();\n    } else if (!isSemiFinalDone) {\n      this.startSemiFinal();\n    } else if (!isFinalDone) {\n      this.startFinal();\n    }\n  };\n\n  componentDidUpdate() {\n    if(this.props.progressTable.groupStatus === 1 ){\n      this.resumeTournament();\n    }\n    localStorage.setItem(\n      \"progressTable\",\n      JSON.stringify(this.props.progressTable)\n    );\n  }\n\n  render() {\n    if (this.state.groupTable.length) {\n      let semiGroupOne = [...this.state.groupTable].slice(0, 4);\n      let semiGroupTwo = [...this.state.groupTable].slice(4, 8);\n      return (\n        <div className=\"final-container\">\n          <div>\n            <SemiFinal\n              isFlipped={false}\n              isActive={true}\n              groupInfo={semiGroupOne}\n              matchId={0}\n            />\n            <SemiFinal\n              isFlipped={false}\n              isActive={false}\n              groupInfo={semiGroupTwo}\n              matchId={1}\n            />\n          </div>\n          <div className=\"final-result-conatiner\">\n            <FinalResult\n              matchType={1}\n              matchId={0}\n              semiFinalResult={this.props.progressTable.semiFinalResult}\n              semiFinalStatus={this.props.progressTable.semiFinalStatus}\n              finalResult={this.props.progressTable.finalResult}\n              finalStatus={this.props.progressTable.finalStatus}\n            />\n            <FinalResult\n              matchType={0}\n              matchId={1}\n              semiFinalResult={this.props.progressTable.semiFinalResult}\n              semiFinalStatus={this.props.progressTable.semiFinalStatus}\n              finalResult={this.props.progressTable.finalResult}\n              finalStatus={this.props.progressTable.finalStatus}\n            />\n          </div>\n          <div>\n            <SemiFinal\n              isFlipped={true}\n              isActive={true}\n              groupInfo={semiGroupOne}\n              matchId={2}\n            />\n            <SemiFinal\n              isFlipped={true}\n              isActive={false}\n              groupInfo={semiGroupTwo}\n              matchId={3}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n}\n\nclass FinalResult extends Component {\n  resetTournament = () => {\n    localStorage.clear();\n    window.location.reload();\n  }\n  render() {\n    let props = this.props;\n    let semiFinalResult = props.semiFinalResult;\n    let semiFinalStatus = props.semiFinalStatus;\n    let finalResult = props.finalResult;\n    let finalStatus = props.finalStatus;\n\n    return (\n      <div className=\"results-conatiner\">\n        <div className=\"semi-winner-conatiner\">\n          <div className=\"result-label\">\n            {props.matchType ? \"Winner \" : \"Looser \"} of semiFinal 1\n            </div>\n          <div className=\"result-value\">\n          { semiFinalStatus[0] === 0\n           ? \"---\"\n           : semiFinalStatus[0] === 2\n              ? props.matchType === 1 ? semiFinalResult[0].winner : semiFinalResult[0].looser\n              : <Spinner />\n          }\n          </div>\n        </div>\n        <div className=\"result\">\n          <div className=\"result-label\">\n          { finalStatus[props.matchId] === 0\n           ? \"---\"\n           : finalStatus[props.matchId] === 2\n              ? finalResult[props.matchId].winner\n              : <Spinner />\n          }\n          </div>\n          <div className=\"result-value\">\n            {props.matchType ? \"Champion\" : \"3rd Place\" }\n          </div>\n          <div className=\"result-label\">\n          { finalStatus[props.matchId] === 0\n           ? \"---\"\n           : finalStatus[props.matchId] === 2\n              ? finalResult[props.matchId].looser\n              : <Spinner />\n          }\n          </div>\n          <div className=\"result-value\">\n            {props.matchType ? \"Runners up\" : \"4th Place\" }\n            {this.props.matchType &&\n              <button className=\"reset-button\" onClick={this.resetTournament}> \n                Restart Tournament \n              </button>\n            }\n          </div>\n        </div>\n        <div className=\"semi-winner-conatiner\">\n          <div className=\"result-label\">\n            {props.matchType ? \"Winner \" : \"Looser \"} of semiFinal 2\n          </div>\n          <div className=\"result-value\">\n          { semiFinalStatus[1] === 0\n           ? \"---\"\n           : semiFinalStatus[1] === 2\n              ? props.matchType === 1 ? semiFinalResult[1].winner : semiFinalResult[1].looser\n              : <Spinner />\n          }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  progressTable : state\n});\n\n\nexport default connect(mapStateToProps)(Final);","import React, { Component } from 'react';\nimport Final from './components/Final'\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Final />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let isLocalStoreAvailable = localStorage.getItem('progressTable') !== null;\nlet emptyState =\n  {\n    groupResult:{},\n    qualifierResult:{},\n    quaterFinalResult:{},\n    semiFinalResult:{},\n    finalResult:{},\n    // status 2 means match is done, 1 means match is being played, 0 means match has not started\n    groupStatus:1,\n    qualifierStatus:[0,0,0,0,0,0,0,0],\n    quaterFinalStatus:[0,0,0,0],\n    semiFinalStatus:[0,0],\n    finalStatus:[0,0]\n};\nlet localState = JSON.parse(localStorage.getItem('progressTable'));\nlet intialState = isLocalStoreAvailable ? localState : emptyState;\n\nconst reducer = (state = intialState, action) => {\n  let newState = {...state};\n\n  switch (action.type) {\n\n    case \"RECORD_GROUP_RESULT\": {\n      newState.groupResult = action.data;\n      newState.groupStatus = 2;\n      return newState;\n    }\n\n    case \"RECORD_QUALIFIER_RESULT\": {\n      newState.qualifierResult[action.index] = action.data;\n      newState.qualifierStatus[action.index] = 2;\n      if (action.index < 7) {\n        newState.qualifierStatus[action.index + 1] = 1;\n      }\n      return newState;\n    }\n\n    case \"RECORD_SEMI_FINAL_RESULT\": {\n      newState.semiFinalResult[action.index] = action.data;\n      newState.semiFinalStatus[action.index] = 2;\n      if (action.index < 1) {\n        newState.semiFinalStatus[action.index + 1] = 1;\n      }\n      return newState;\n    }\n\n    case \"RECORD_FINAL_RESULT\": {\n      newState.finalResult[action.index] = action.data;\n      newState.finalStatus[action.index] = 2;\n      if (action.index < 1) {\n        console.log(action.index);\n        newState.finalStatus[action.index + 1] = 1;\n      }\n      return newState;\n    }\n\n    case \"RECORD_QUATER_FINAL_RESULT\": {\n      newState.quaterFinalResult[action.index] = action.data;\n      newState.quaterFinalStatus[action.index] = 2;\n      if (action.index < 3) {\n        newState.quaterFinalStatus[action.index + 1] = 1;\n      }\n      return newState;\n    }\n\n    case \"START_QUALIFIER\": {\n      newState.qualifierStatus[action.index] = 1;\n      return newState;\n    }\n    case \"START_QUATERFINAL\": {\n      newState.quaterFinalStatus[action.index] = 1;\n      return newState;\n    }\n    \n    case \"START_SEMIFINAL\": {\n      newState.semiFinalStatus[action.index] = 1;\n      return newState;\n    }\n\n    case \"START_FINAL\": {\n      console.log(action.index);\n      newState.finalStatus[action.index] = 1;\n      return newState;\n    }\n\n    case \"RESET_DATA\" : {\n      return {...emptyState};\n    }\n\n    default:\n      return newState;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider} from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducer';\n\nconst store = createStore(reducer);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}